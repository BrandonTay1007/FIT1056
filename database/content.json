[
    {
        "id": 1,
        "name": "Content 1",
        "type": "text",
        "content": "This is a content about the basics of programming."
    },
    {
        "id": 2,
        "name": "Introduction to Programming in Python",
        "type": "text",
        "content": "Programming is the process of creating a set of instructions that tell a computer how to perform a task. Python is a popular programming language known for its simplicity and readability. In this introduction, we will cover the basics of Python programming, including variables, data types, control structures, functions, and more."
    },
    {
        "id": 3,
        "name": "Variables and Data Types",
        "type": "text",
        "content": "In Python, a variable is a name that refers to a value. You can create a variable by assigning a value to it using the equals sign. Python supports various data types, including integers, floats, strings, and booleans. For example:\n\n```python\nage = 25  # Integer\nheight = 5.9  # Float\nname = 'Alice'  # String\nis_student = True  # Boolean\n```"
    },
    {
        "id": 4,
        "name": "Control Structures",
        "type": "text",
        "content": "Control structures allow you to dictate the flow of your program. The most common control structures are if statements, loops (for and while), and functions. For example:\n\n```python\nif age >= 18:\n    print('You are an adult.')\nelse:\n    print('You are a minor.')\n\nfor i in range(5):\n    print(i)\n```"
    },
    {
        "id": 5,
        "name": "Functions",
        "type": "text",
        "content": "Functions are reusable pieces of code that perform a specific task. You can define a function using the `def` keyword. For example:\n\n```python\ndef greet(name):\n    return f'Hello, {name}!'\n\nprint(greet('Alice'))  # Output: Hello, Alice!\n```"
    },
    {
        "id": 6,
        "name": "Conclusion",
        "type": "text",
        "content": "This introduction covered the basics of programming in Python. With these foundational concepts, you can start writing your own Python programs and explore more advanced topics such as object-oriented programming, libraries, and frameworks."
    }
]
